server.port=8082
spring.application.name=payment-service

# Database
#spring.datasource.url=jdbc:postgresql://localhost:5432/payment_db
#spring.datasource.username=postgres
#spring.datasource.password=password
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.url= jdbc:mysql://mysql:3306/payment_db
spring.datasource.username=root
spring.datasource.password=4186

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.mvc.pathmatch.matching-strategy=ant-path-matcher

spring.kafka.bootstrap-servers=kafka:9092






# Kafka
spring.kafka.bootstrap-servers=kafka:9092

# Consumer Configuration
spring.kafka.consumer.group-id=payment-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Make /actuator/health fast
management.health.db.enabled=false
management.health.kafka.enabled=false
management.health.ping.enabled=true
# Cache health result briefly to avoid repeated expensive checks
management.endpoint.health.cache.time-to-live=2s